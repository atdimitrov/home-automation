@page "/lighting"
@inject HttpClient Http
@using HomeAutomation.Shared

<h1>Lighting</h1>

@if (this.loaded)
{
    <div style="margin: 10px">
        <p>Lighting is @this.state</p>
    </div>
    
    <div style="margin: 10px">
        <p>Next lighting state change: @this.upcomingStateChanges.NextChange.NewState at @this.upcomingStateChanges.NextChange.Timestamp</p>
        <p>Next solar event: @this.upcomingStateChanges.NextChange.SolarEvent.Type at @this.upcomingStateChanges.NextChange.SolarEvent.Timestamp</p>
    </div>

    <div style="margin: 10px">
        <p>Next next lighting state change: @this.upcomingStateChanges.NextNextChange.NewState at @this.upcomingStateChanges.NextNextChange.Timestamp</p>
        <p>Next next solar event: @this.upcomingStateChanges.NextNextChange.SolarEvent.Type at @this.upcomingStateChanges.NextNextChange.SolarEvent.Timestamp</p>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    private bool loaded = false;
    private State state;
    private UpcomingLightingStateChanges upcomingStateChanges;

    protected override async Task OnInitializedAsync()
    {
        this.state = await Http.GetFromJsonAsync<State>("/api/lighting/getState");
        this.upcomingStateChanges = await Http.GetFromJsonAsync<UpcomingLightingStateChanges>("/api/lighting/getUpcomingStateChanges");
        this.loaded = true;
    }
}
